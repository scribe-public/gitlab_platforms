variables:
  ####### PLATFORMS TOOL VERSION #######
  PLATFORMS_VERSION: "dev-latest" # Platform APP Version

  ####### SCRIBE PRODUCT VERSION #######
  SCRIBE_PRODUCT_VERSION: "v1.2"
  
  ####### VALINT GLOBAL VARIABLES #######
  VALINT_SCRIBE_AUTH_CLIENT_SECRET: $SCRIBE_CLIENT_TOKEN # Scribe Service Client Secret
  VALINT_SCRIBE_ENABLE: true
  VALINT_SCRIBE_URL: https://api.scribesecurity.com
  VALINT_CONTEXT_TYPE: "gitlab"
  VALINT_DISABLE_EVIDENCE_CACHE: false

  ####### SIGNING/VERIFYING GLOBAL VARIABLES #######
  ATTEST_KEY_B64: $ATTEST_KEY_B64 # Evidence Signing Key
  ATTEST_CERT_B64: $ATTEST_CERT_B64 # Evidence Signing Cert
  ATTEST_CA_B64: $ATTEST_CA_B64 # Evidence Signing CA

  ######### DISCOVERY GITLAB VARIABLES #########
  GITLAB_TOKEN: $GITLAB_PAT_TOKEN # Gitlab discovery token
  GITLAB_COMMIT_TIME_SCOPE: 90
  GITLAB_PIPELINE_TIME_SCOPE: 90

  ######### DISCOVERY KUBERNETES VARIABLES #########
  K8S_TOKEN: $K8S_TEST_CLUSTER_TOKEN # K8s discovery token
  K8S_URL: $K8S_URL # K8s discovery URL
  
  ######### DISCOVERY DOCKERHUB VARIABLES #########
  DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME
  DOCKERHUB_PASSWORD: $DOCKERHUB_PASSWORD_B64
  DOCKERHUB_TIME_SCOPE: 90


  ######### DIND VARIABLES #########
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_VERIFY: 1
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_HOST: tcp://docker:2376

  ############# DEBUG VARIABLES #############
  MONITOR_MOUNT: /builds
  MONITOR_CLEAN_DOCKER: true
  # LOG_LEVEL: "INFO"
  # DEBUG: false
  # VALINT_LOG_LEVEL: "info"

stages:
  - discovery
  - bom-sign
  - policy

############### REUSABLE DISCOVERY ################
include:
  # DISCOVERY
  - local: discover-gitlab.yml
    inputs:
      project-mapping: "*flask-monorepo-project::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *dhs-vue-sample-proj::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"
      organization-mapping: "*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"
      gitlab-token: ${GITLAB_TOKEN}
      scope-commit-days: ${GITLAB_COMMIT_TIME_SCOPE}
      scope-pipeline-days: ${GITLAB_PIPELINE_TIME_SCOPE}

  - local: discover-dockerhub.yml
    inputs:
      namespace-mapping: "*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"
      repository-mapping: "*service-*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *dhs*::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"
      username: ${DOCKERHUB_USERNAME}
      password-b64: ${DOCKERHUB_PASSWORD_B64}
      scope-days: ${DOCKERHUB_TIME_SCOPE}

  - local: discover-k8s.yml
    inputs:
      namespace-mapping: "default::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} default::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"
      pod-mapping: "*service-*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *dhs*::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"
      token: ${K8S_TOKEN}
      url: ${K8S_URL}

  # BOM
  - local: bom-dockerhub.yml
    inputs:
      mapping: "*service-*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *dhs*::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"

  - local: bom-k8s.yml
    inputs:
      mapping: "default::*service-*::*service-*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION}"

  # POLICY
  - local: policy-gitlab.yml
    inputs:
      project-mapping: "*flask-monorepo-project::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *dhs-vue-sample-proj::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"
      organization-mapping: "*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"

  - local: policy-dockerhub.yml
    inputs:
      image-mapping: "*service-*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION} *dhs*::dhs-vue-sample-proj::${SCRIBE_PRODUCT_VERSION}"

  - local: policy-k8s.yml
    inputs:
      image-mapping: "default::*service-*::*service-*::flask-monorepo-project::${SCRIBE_PRODUCT_VERSION}"

discovery-gitlab:
  stage: discovery
  cache:
  - key: gitlab.platforms.db
    paths:
    - gitlab.platforms.db
  - key: discovery-gitlab-product-version
    paths:
    - discovery-gitlab-product-version
  - key: evidence-gitlab
    paths:
    - evidence/gitlab
  variables:
    PLATFORMS_DB_PATH: gitlab.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/gitlab


discovery-dockerhub:
  stage: discovery
  cache:
  - key: dockerhub.platforms.db
    paths:
    - dockerhub.platforms.db
  - key: evidence-dockerhub-discovery
    paths:
    - evidence/dockerhub-discovery
  variables:
    PLATFORMS_DB_PATH: dockerhub.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/dockerhub-discovery

discovery-k8s:
  stage: discovery
  cache:
  - key: k8s.platforms.db
    paths:
    - k8s.platforms.db
  - key: evidence-k8s-discovery
    paths:
    - evidence/k8s-discovery
  variables:
    PLATFORMS_DB_PATH: k8s.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/k8s-discovery

############### BOM ################
bom-dockerhub:
  stage: bom-sign
  needs: ["discovery-dockerhub"]
  timeout: 5 hours
  cache:
  - key: dockerhub.platforms.db
    paths:
    - dockerhub.platforms.db
  - key: evidence-dockerhub
    paths:
    - evidence/dockerhub
  variables:
    PLATFORMS_DB_PATH: dockerhub.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/dockerhub

bom-k8s:
  stage: bom-sign
  needs: ["discovery-k8s"]
  cache:
  - key: k8s.platforms.db
    paths:
    - k8s.platforms.db
  - key: evidence-k8s
    paths:
    - evidence/k8s
  variables:
    PLATFORMS_DB_PATH: k8s.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/k8s

############### POLICY ################
policy-gitlab:
  stage: policy
  needs: ["discovery-gitlab"]
  cache:
  - key: gitlab.platforms.db
    paths:
    - gitlab.platforms.db
  - key: discovery-gitlab-product-version
    paths:
    - discovery-gitlab-product-version
  - key: evidence-gitlab
    paths:
    - evidence/gitlab
  variables:
    PLATFORMS_DB_PATH: gitlab.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/gitlab
  artifacts:
    paths:
      - evidence/gitlab/*sarif*
    expire_in: 1 week

policy-dockerhub:
  stage: policy
  needs: ["bom-dockerhub"]
  timeout: 5 hours
  cache:
  - key: dockerhub.platforms.db
    paths:
      - dockerhub.platforms.db
  - key: evidence-dockerhub
    paths:
    - evidence/dockerhub
  variables:
    PLATFORMS_DB_PATH: dockerhub.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/dockerhub
  artifacts:
    paths:
      - evidence/dockerhub/*sarif*
    expire_in: 1 week

policy-k8s:
  stage: policy
  needs: ["bom-k8s"]
  cache:
  - key: k8s.platforms.db
    paths:
      - k8s.platforms.db
  - key: evidence-k8s
    paths:
    - evidence/k8s
  variables:
    PLATFORMS_DB_PATH: k8s.platforms.db
    VALINT_OUTPUT_DIRECTORY: evidence/k8s
  artifacts:
    paths:
      - evidence/k8s/*sarif*
    expire_in: 1 week